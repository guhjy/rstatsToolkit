% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/loopOutputToListGEE.R
\name{loopOutputToListGEE}
\alias{loopOutputToListGEE}
\title{Loop through GEE analyses.}
\usage{
loopOutputToListGEE(data, dependent, independent, covariates,
  interactions = NULL, corstr = "exchangeable")
}
\arguments{
\item{data}{The dataset with the variables of interest}

\item{dependent}{A single or a vector of variables names that the
user wishes to use as dependent variables in an analysis;
\code{dependent} must be as a string/character.}

\item{independent}{Similar to \code{dependent}, except that the
variables would be the independent, or exposure, variables of
interest.}

\item{covariates}{Confounders or covariates that would be included
in \strong{all} formulas and hence \strong{all} models.  Also must
be a string/character.}

\item{interactions}{Optional, include \emph{one} variable from the
\code{covariates} set that will be assigned as an interaction term
with the \code{independent} variable.  Must be a string/character.}

\item{corstr}{The working correlation structure to use in the
\code{\link[gee]{gee}} function call.  Options can be found in the
gee package, but include 'exchangeable', 'unstructured', 'AR-M' (M =}
}
\value{
Creates a list of GEE objects
}
\description{
Run a GEE analysis on a list of formulas and create a list of GEE
objects.
}
\details{
This function is merely a wrapper around \code{\link[gee]{gee}},
and therefore all inquiries into GEE should start there.  As a
note, I don't know how (yet) to provide an option to use a custom
\code{id} variable for the GEE analysis, so \strong{make sure to
rename your \code{id} variable to 'SID'}.  Also, according to the
GEE documentations, the \strong{ordering of the ID variables
matters}!  Make sure to sort the ID variables as per how you want
them!  For documentation on the function to create the formula
list, see \code{\link{createFormulaList}}.
}
\examples{
data(state)

## Very simple test example.  Merely to show how the function is used.
outcomes <- c('Income', 'Population')
exposures <- c('Frost', 'Illiteracy')
covariates <- c('Murder', 'LifeExp')
interaction <- 'LifeExp'

## This uses the dplyr package.
ds <- cbind(state.region, state.x77) \%>\%
  as.data.frame() \%>\%
  rename(LifeExp = `Life Exp`,
         ## Need to rename the id variable to SID (see description
         ## above)
         SID = state.region) \%>\%
  arrange(SID)

## Without interaction
loopOutputToListGEE(ds, outcomes, exposures, covariates,
                    corstr = 'exchangeable')

## With interaction
loopOutputToListGEE(ds, outcomes, exposures, covariates,
                    interaction, corstr = 'exchangeable')
}
\author{
Luke W. Johnston
}

