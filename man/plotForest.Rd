% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/plotForest.R
\name{plotForest}
\alias{plotForest}
\title{Forest plot}
\usage{
plotForest(data, coeff = coefficient, yvar = y.variables.column,
  ylab = yaxis.label, xlab = xaxis.label, ci = confid.interval,
  dot.pval = pvalue.factor.column, coefficient = "Estimate",
  y.variables.column = "indep", confid.interval = c("lowerCI", "upperCI"),
  pvalue.factor.column = "NULL", groups = NULL, yaxis.label = "Exposures",
  xaxis.label = "Beta estimate")
}
\arguments{
\item{data}{Dataset for the forest plot.}

\item{coefficient,coeff}{The column that contains the beta
estimate/coefficient.}

\item{y.variables.column,yvar}{The column with the exposure
variables that will be places on the y-axis of the forest plot.}

\item{confid.interval,ci}{A vector that contains the lower and
upper confidence interval.}

\item{pvalue.factor.column,dot.pval}{The column that contains the
p-value in the form of a factor variable (ie. with levels such as
'>0.05' and '<0.05').}

\item{groups}{The variable to split the plot up.}

\item{yaxis.label,ylab}{The y-axis label.}

\item{xaxis.label,xlab}{The x-axis label.}
}
\value{
A forest plot
}
\description{
Generate a forest plot without the traditional side table .
}
\details{
Create a forest plot, with a dot and 95% confidence line, though
without the usual side table that contains the raw data values.
If the \code{dot.pval} argument is supplied, the dots and
confidence lines increase in size and opacity as significance
increases.  If \code{groups} is also supplied, the forest plot
will be split up vertically for each grouping.  Thus, a large
amount of information on the results can be provided in a fairly
small amount of space.
}
\examples{
## Very simple test example.  Merely to show how the function is used.
outcomes <- c('Income', 'Population')
exposures <- c('Frost', 'Illiteracy')
covariates <- c('Murder', 'LifeExp')
interaction <- 'LifeExp'

## This uses the dplyr package.
ds <- cbind(state.region, state.x77) \%>\%
  as.data.frame() \%>\%
  rename(LifeExp = `Life Exp`,
         ## Need to rename the id variable to SID (see description
         ## above)
         SID = state.region) \%>\%
  arrange(SID)

loopOutputToListGEE(ds, outcomes, exposures, covariates,
                    corstr = 'exchangeable') \%>\%
  extractBetaFromListGEE() \%>\%
  unlistAndFilterIndep(., exposures) \%>\%
  createCI() \%>\%
  plotForest(., dot.pval = 'f.pvalue', groups = 'dep')
}
\author{
Luke W. Johnston
}

